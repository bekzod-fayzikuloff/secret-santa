# Generated by Django 4.0.4 on 2022-05-09 14:37

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Box",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("price_range", models.PositiveIntegerField()),
                ("last_join_data", models.DateField()),
                ("member_entry_message", models.TextField(max_length=2000)),
            ],
            options={
                "verbose_name": "box",
                "verbose_name_plural": "boxes",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=120)),
                ("last_name", models.CharField(max_length=120)),
                ("email", models.EmailField(max_length=120)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="TossResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "box",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.box"),
                ),
                (
                    "get_from",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="get_from",
                        to="api.user",
                    ),
                ),
                (
                    "present_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="present_to",
                        to="api.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "toss",
                "verbose_name_plural": "tosses",
            },
        ),
        migrations.CreateModel(
            name="SecretChat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "to_box",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.box"),
                ),
            ],
            options={
                "verbose_name": "secret_chat",
                "verbose_name_plural": "secret_chats",
            },
        ),
        migrations.CreateModel(
            name="Questionary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(max_length=1000)),
                (
                    "maker",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.user"),
                ),
                (
                    "to_box",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questionary",
                        to="api.box",
                    ),
                ),
            ],
            options={
                "verbose_name": "questionary",
                "verbose_name_plural": "questionaries",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(max_length=1000)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "message_from",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.user"),
                ),
                (
                    "to_chat",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.secretchat"),
                ),
            ],
            options={
                "verbose_name": "message",
                "verbose_name_plural": "messages",
            },
        ),
        migrations.AddField(
            model_name="box",
            name="manager",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="boxes",
                to="api.user",
            ),
        ),
        migrations.AddField(
            model_name="box",
            name="members",
            field=models.ManyToManyField(related_name="box", to="api.user"),
        ),
    ]
